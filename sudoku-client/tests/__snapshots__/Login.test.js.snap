// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithStyles(Login) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "button": "Login-button-3",
        "container": "Login-container-1",
        "error": "Login-error-7",
        "input": "Login-input-4",
        "para": "Login-para-6",
        "root": "Login-root-5",
        "textField": "Login-textField-2",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "button": "Login-button-3",
          "container": "Login-container-1",
          "error": "Login-error-7",
          "input": "Login-input-4",
          "para": "Login-para-6",
          "root": "Login-root-5",
          "textField": "Login-textField-2",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Login component renders correctly 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    classes={
      Object {
        "button": "Login-button-3",
        "container": "Login-container-1",
        "error": "Login-error-7",
        "input": "Login-input-4",
        "para": "Login-para-6",
        "root": "Login-root-5",
        "textField": "Login-textField-2",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <WithStyles(AppBar)
          title="Login"
        >
          <WithStyles(Toolbar)>
            <WithStyles(Typography)
              color="inherit"
              variant="h6"
            >
              Login Page
            </WithStyles(Typography)>
          </WithStyles(Toolbar)>
        </WithStyles(AppBar)>
        <form
          autoComplete="off"
          className="Login-container-1"
          noValidate={true}
          onSubmit={[Function]}
        >
          <TextField
            autoComplete="email"
            className="Login-textField-2"
            id="login-email-input"
            label="Email"
            margin="normal"
            name="email"
            onChange={[Function]}
            required={false}
            select={false}
            type="email"
            variant="outlined"
          />
          <TextField
            autoComplete="current-password"
            className="Login-textField-2"
            id="login-password-input"
            label="Password"
            margin="normal"
            onChange={[Function]}
            required={false}
            select={false}
            type="password"
            variant="outlined"
          />
          <div
            className="Login-button-3"
          >
            <WithStyles(Button)
              color="primary"
              id="login-button"
              type="Submit"
              variant="outlined"
            >
              Login
            </WithStyles(Button)>
          </div>
        </form>
        <p
          className="Login-para-6"
        >
          Not registered yet? Register Now!
        </p>
        <Link
          id="register-page"
          replace={false}
          title="Register"
          to="/register"
        >
          Register
        </Link>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <WithStyles(AppBar)
            title="Login"
          >
            <WithStyles(Toolbar)>
              <WithStyles(Typography)
                color="inherit"
                variant="h6"
              >
                Login Page
              </WithStyles(Typography)>
            </WithStyles(Toolbar)>
          </WithStyles(AppBar)>,
          <form
            autoComplete="off"
            className="Login-container-1"
            noValidate={true}
            onSubmit={[Function]}
          >
            <TextField
              autoComplete="email"
              className="Login-textField-2"
              id="login-email-input"
              label="Email"
              margin="normal"
              name="email"
              onChange={[Function]}
              required={false}
              select={false}
              type="email"
              variant="outlined"
            />
            <TextField
              autoComplete="current-password"
              className="Login-textField-2"
              id="login-password-input"
              label="Password"
              margin="normal"
              onChange={[Function]}
              required={false}
              select={false}
              type="password"
              variant="outlined"
            />
            <div
              className="Login-button-3"
            >
              <WithStyles(Button)
                color="primary"
                id="login-button"
                type="Submit"
                variant="outlined"
              >
                Login
              </WithStyles(Button)>
            </div>
          </form>,
          <p
            className="Login-para-6"
          >
            Not registered yet? Register Now!
          </p>,
          <Link
            id="register-page"
            replace={false}
            title="Register"
            to="/register"
          >
            Register
          </Link>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Toolbar)>
              <WithStyles(Typography)
                color="inherit"
                variant="h6"
              >
                Login Page
              </WithStyles(Typography)>
            </WithStyles(Toolbar)>,
            "title": "Login",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Typography)
                color="inherit"
                variant="h6"
              >
                Login Page
              </WithStyles(Typography)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Login Page",
                "color": "inherit",
                "variant": "h6",
              },
              "ref": null,
              "rendered": "Login Page",
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "autoComplete": "off",
            "children": Array [
              null,
              <TextField
                autoComplete="email"
                className="Login-textField-2"
                id="login-email-input"
                label="Email"
                margin="normal"
                name="email"
                onChange={[Function]}
                required={false}
                select={false}
                type="email"
                variant="outlined"
              />,
              <TextField
                autoComplete="current-password"
                className="Login-textField-2"
                id="login-password-input"
                label="Password"
                margin="normal"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="outlined"
              />,
              <div
                className="Login-button-3"
              >
                <WithStyles(Button)
                  color="primary"
                  id="login-button"
                  type="Submit"
                  variant="outlined"
                >
                  Login
                </WithStyles(Button)>
              </div>,
            ],
            "className": "Login-container-1",
            "noValidate": true,
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            null,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoComplete": "email",
                "className": "Login-textField-2",
                "id": "login-email-input",
                "label": "Email",
                "margin": "normal",
                "name": "email",
                "onChange": [Function],
                "required": false,
                "select": false,
                "type": "email",
                "variant": "outlined",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoComplete": "current-password",
                "className": "Login-textField-2",
                "id": "login-password-input",
                "label": "Password",
                "margin": "normal",
                "onChange": [Function],
                "required": false,
                "select": false,
                "type": "password",
                "variant": "outlined",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <WithStyles(Button)
                  color="primary"
                  id="login-button"
                  type="Submit"
                  variant="outlined"
                >
                  Login
                </WithStyles(Button)>,
                "className": "Login-button-3",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Login",
                  "color": "primary",
                  "id": "login-button",
                  "type": "Submit",
                  "variant": "outlined",
                },
                "ref": null,
                "rendered": "Login",
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Not registered yet? Register Now!",
            "className": "Login-para-6",
          },
          "ref": null,
          "rendered": "Not registered yet? Register Now!",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Register",
            "className": undefined,
            "id": "register-page",
            "replace": false,
            "title": "Register",
            "to": "/register",
          },
          "ref": null,
          "rendered": "Register",
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <WithStyles(AppBar)
            title="Login"
          >
            <WithStyles(Toolbar)>
              <WithStyles(Typography)
                color="inherit"
                variant="h6"
              >
                Login Page
              </WithStyles(Typography)>
            </WithStyles(Toolbar)>
          </WithStyles(AppBar)>
          <form
            autoComplete="off"
            className="Login-container-1"
            noValidate={true}
            onSubmit={[Function]}
          >
            <TextField
              autoComplete="email"
              className="Login-textField-2"
              id="login-email-input"
              label="Email"
              margin="normal"
              name="email"
              onChange={[Function]}
              required={false}
              select={false}
              type="email"
              variant="outlined"
            />
            <TextField
              autoComplete="current-password"
              className="Login-textField-2"
              id="login-password-input"
              label="Password"
              margin="normal"
              onChange={[Function]}
              required={false}
              select={false}
              type="password"
              variant="outlined"
            />
            <div
              className="Login-button-3"
            >
              <WithStyles(Button)
                color="primary"
                id="login-button"
                type="Submit"
                variant="outlined"
              >
                Login
              </WithStyles(Button)>
            </div>
          </form>
          <p
            className="Login-para-6"
          >
            Not registered yet? Register Now!
          </p>
          <Link
            id="register-page"
            replace={false}
            title="Register"
            to="/register"
          >
            Register
          </Link>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <WithStyles(AppBar)
              title="Login"
            >
              <WithStyles(Toolbar)>
                <WithStyles(Typography)
                  color="inherit"
                  variant="h6"
                >
                  Login Page
                </WithStyles(Typography)>
              </WithStyles(Toolbar)>
            </WithStyles(AppBar)>,
            <form
              autoComplete="off"
              className="Login-container-1"
              noValidate={true}
              onSubmit={[Function]}
            >
              <TextField
                autoComplete="email"
                className="Login-textField-2"
                id="login-email-input"
                label="Email"
                margin="normal"
                name="email"
                onChange={[Function]}
                required={false}
                select={false}
                type="email"
                variant="outlined"
              />
              <TextField
                autoComplete="current-password"
                className="Login-textField-2"
                id="login-password-input"
                label="Password"
                margin="normal"
                onChange={[Function]}
                required={false}
                select={false}
                type="password"
                variant="outlined"
              />
              <div
                className="Login-button-3"
              >
                <WithStyles(Button)
                  color="primary"
                  id="login-button"
                  type="Submit"
                  variant="outlined"
                >
                  Login
                </WithStyles(Button)>
              </div>
            </form>,
            <p
              className="Login-para-6"
            >
              Not registered yet? Register Now!
            </p>,
            <Link
              id="register-page"
              replace={false}
              title="Register"
              to="/register"
            >
              Register
            </Link>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <WithStyles(Toolbar)>
                <WithStyles(Typography)
                  color="inherit"
                  variant="h6"
                >
                  Login Page
                </WithStyles(Typography)>
              </WithStyles(Toolbar)>,
              "title": "Login",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <WithStyles(Typography)
                  color="inherit"
                  variant="h6"
                >
                  Login Page
                </WithStyles(Typography)>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Login Page",
                  "color": "inherit",
                  "variant": "h6",
                },
                "ref": null,
                "rendered": "Login Page",
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoComplete": "off",
              "children": Array [
                null,
                <TextField
                  autoComplete="email"
                  className="Login-textField-2"
                  id="login-email-input"
                  label="Email"
                  margin="normal"
                  name="email"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  type="email"
                  variant="outlined"
                />,
                <TextField
                  autoComplete="current-password"
                  className="Login-textField-2"
                  id="login-password-input"
                  label="Password"
                  margin="normal"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  type="password"
                  variant="outlined"
                />,
                <div
                  className="Login-button-3"
                >
                  <WithStyles(Button)
                    color="primary"
                    id="login-button"
                    type="Submit"
                    variant="outlined"
                  >
                    Login
                  </WithStyles(Button)>
                </div>,
              ],
              "className": "Login-container-1",
              "noValidate": true,
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              null,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoComplete": "email",
                  "className": "Login-textField-2",
                  "id": "login-email-input",
                  "label": "Email",
                  "margin": "normal",
                  "name": "email",
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "email",
                  "variant": "outlined",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoComplete": "current-password",
                  "className": "Login-textField-2",
                  "id": "login-password-input",
                  "label": "Password",
                  "margin": "normal",
                  "onChange": [Function],
                  "required": false,
                  "select": false,
                  "type": "password",
                  "variant": "outlined",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <WithStyles(Button)
                    color="primary"
                    id="login-button"
                    type="Submit"
                    variant="outlined"
                  >
                    Login
                  </WithStyles(Button)>,
                  "className": "Login-button-3",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Login",
                    "color": "primary",
                    "id": "login-button",
                    "type": "Submit",
                    "variant": "outlined",
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Not registered yet? Register Now!",
              "className": "Login-para-6",
            },
            "ref": null,
            "rendered": "Not registered yet? Register Now!",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Register",
              "className": undefined,
              "id": "register-page",
              "replace": false,
              "title": "Register",
              "to": "/register",
            },
            "ref": null,
            "rendered": "Register",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenThreeAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
